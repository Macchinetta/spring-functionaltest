<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:sec="http://www.springframework.org/schema/security" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd
                        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd
                        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <sec:authentication-manager id="customerAuthenticationManager">
        <sec:authentication-provider ref="customerPasswordAuthenticationProvider" />
    </sec:authentication-manager>

    <bean id="customerPasswordAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="hideUserNotFoundExceptions" value="true" />
        <property name="passwordEncoder" ref="passwordEncoder" />
        <property name="userDetailsService" ref="customerService" />
    </bean>

    <bean id="customerService"
        class="jp.co.ntt.fw.spring.functionaltest.domain.service.athn.ReservationUserDetailsService">
    </bean>

    <bean id="jspCustomerLoginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg value="/jsp/1701/001" />
    </bean>

    <bean id="thymeleafCustomerLoginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg value="/thymeleaf/1701/001" />
    </bean>

    <bean id="jspLoginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg value="/jsp/1702/001" />
    </bean>

    <bean id="thymeleafLoginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg value="/thymeleaf/1702/001" />
    </bean>

    <bean id="jspCompanyIdUsernamePasswordAuthenticationFilter"
        class="jp.co.ntt.fw.spring.functionaltest.app.athn.CompanyIdUsernamePasswordAuthenticationFilter">
        <property name="requiresAuthenticationRequestMatcher">
            <bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
                <constructor-arg index="0" value="/jsp/1702/customerAuthenticate" />
                <constructor-arg index="1" value="POST" />
            </bean>
        </property>
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="sessionAuthenticationStrategy" ref="sessionAuthenticationStrategy" />
        <property name="securityContextRepository" ref="securityContextRepository" />
        <property name="authenticationFailureHandler">
            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
                <constructor-arg value="/jsp/1702/001?error" />
            </bean>
        </property>
        <property name="authenticationSuccessHandler">
            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
                <constructor-arg value="/jsp/1702/001?loginSuccess" />
            </bean>
        </property>
    </bean>

    <bean id="thymeleafCompanyIdUsernamePasswordAuthenticationFilter"
        class="jp.co.ntt.fw.spring.functionaltest.app.athn.CompanyIdUsernamePasswordAuthenticationFilter">
        <property name="requiresAuthenticationRequestMatcher">
            <bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
                <constructor-arg index="0" value="/thymeleaf/1702/customerAuthenticate" />
                <constructor-arg index="1" value="POST" />
            </bean>
        </property>
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="sessionAuthenticationStrategy" ref="sessionAuthenticationStrategy" />
        <property name="securityContextRepository" ref="securityContextRepository" />
        <property name="authenticationFailureHandler">
            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
                <constructor-arg value="/thymeleaf/1702/001?error" />
            </bean>
        </property>
        <property name="authenticationSuccessHandler">
            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
                <constructor-arg value="/thymeleaf/1702/001?loginSuccess" />
            </bean>
        </property>
    </bean>

    <!-- Use the "id" here although using the "alias" for guideline. "alias" does not work here because 
    there are number of "spring-security.xml" for each "spring-functionaltest" which leads to the duplication 
    . -->
    <sec:authentication-manager id="authenticationManager">
        <sec:authentication-provider ref="companyIdUsernamePasswordAuthenticationProvider" />
    </sec:authentication-manager>
    <bean id="companyIdUsernamePasswordAuthenticationProvider"
        class="jp.co.ntt.fw.spring.functionaltest.domain.service.athn.CompanyIdUsernamePasswordAuthenticationProvider">
        <property name="userDetailsService" ref="customerService" />
        <property name="passwordEncoder" ref="passwordEncoder" />
    </bean>

    <bean id="securityContextRepository"
        class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />
    <bean id="sessionAuthenticationStrategy"
        class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
        <constructor-arg>
            <util:list>
                <bean class="org.springframework.security.web.csrf.CsrfAuthenticationStrategy">
                    <constructor-arg ref="csrfTokenRepository" />
                </bean>
                <bean
                    class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy" />
            </util:list>
        </constructor-arg>
    </bean>

    <bean id="csrfTokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository" />

    <sec:http pattern="/jsp/1701/**" request-matcher="ant" auto-config="false" entry-point-ref="jspCustomerLoginUrlAuthenticationEntryPoint"
        authentication-manager-ref="customerAuthenticationManager">
        <sec:form-login login-processing-url="/jsp/1701/customerAuthenticate"
            default-target-url="/jsp/1701/001?loginSuccess" always-use-default-target="true" />
        <sec:session-management session-authentication-strategy-ref="sessionAuthenticationStrategy" />
        <sec:logout logout-url="/jsp/1701/logout" logout-success-url="/athn"
            delete-cookies="JSESSIONID" />
        <sec:intercept-url pattern="/**" access="permitAll" />
    </sec:http>

    <sec:http pattern="/jsp/1702/**" request-matcher="ant" auto-config="false" entry-point-ref="jspLoginUrlAuthenticationEntryPoint">
        <sec:custom-filter position="FORM_LOGIN_FILTER" ref="jspCompanyIdUsernamePasswordAuthenticationFilter" />
        <sec:csrf token-repository-ref="csrfTokenRepository" />
        <sec:logout logout-url="/jsp/1702/logout" logout-success-url="/athn"
            delete-cookies="JSESSIONID" />
        <sec:intercept-url pattern="/**" access="permitAll" />
    </sec:http>

    <sec:http pattern="/jsp/1703/**" request-matcher="ant" authentication-manager-ref="userLoginManagerForAthn">
        <sec:form-login login-page="/jsp/1703/001" login-processing-url="/jsp/1703/001/authenticate"
            default-target-url="/jsp/1703/001?loginSuccess" always-use-default-target="true" />
        <sec:logout logout-url="/jsp/1703/001/logout" logout-success-url="/jsp/1703/001" />
        <sec:intercept-url pattern="/jsp/1703/001/**" access="permitAll" />
        <sec:intercept-url pattern="/jsp/1703/001/login/**" access="permitAll" />
        <sec:intercept-url pattern="/jsp/1703/001/logout/**" access="permitAll" />
        <sec:intercept-url pattern="/jsp/1703/**" access="isAuthenticated()" />
        <sec:intercept-url pattern="/**" access="permitAll" />
    </sec:http>

    <sec:http pattern="/thymeleaf/1701/**" request-matcher="ant" auto-config="false" entry-point-ref="thymeleafCustomerLoginUrlAuthenticationEntryPoint"
        authentication-manager-ref="customerAuthenticationManager">
        <sec:form-login login-processing-url="/thymeleaf/1701/customerAuthenticate"
            default-target-url="/thymeleaf/1701/001?loginSuccess" always-use-default-target="true" />
        <sec:session-management session-authentication-strategy-ref="sessionAuthenticationStrategy" />
        <sec:logout logout-url="/thymeleaf/1701/logout" logout-success-url="/athn"
            delete-cookies="JSESSIONID" />
        <sec:intercept-url pattern="/**" access="permitAll" />
    </sec:http>

    <sec:http pattern="/thymeleaf/1702/**" request-matcher="ant" auto-config="false" entry-point-ref="thymeleafLoginUrlAuthenticationEntryPoint">
        <sec:custom-filter position="FORM_LOGIN_FILTER" ref="thymeleafCompanyIdUsernamePasswordAuthenticationFilter" />
        <sec:csrf token-repository-ref="csrfTokenRepository" />
        <sec:logout logout-url="/thymeleaf/1702/logout" logout-success-url="/athn"
            delete-cookies="JSESSIONID" />
        <sec:intercept-url pattern="/**" access="permitAll" />
    </sec:http>

    <sec:http pattern="/thymeleaf/1703/**" request-matcher="ant" authentication-manager-ref="userLoginManagerForAthn">
        <sec:form-login login-page="/thymeleaf/1703/001" login-processing-url="/thymeleaf/1703/001/authenticate"
            default-target-url="/thymeleaf/1703/001?loginSuccess" always-use-default-target="true" />
        <sec:logout logout-url="/thymeleaf/1703/001/logout" logout-success-url="/thymeleaf/1703/001" />
        <sec:intercept-url pattern="/thymeleaf/1703/001/**" access="permitAll" />
        <sec:intercept-url pattern="/thymeleaf/1703/001/login/**" access="permitAll" />
        <sec:intercept-url pattern="/thymeleaf/1703/001/logout/**" access="permitAll" />
        <sec:intercept-url pattern="/thymeleaf/1703/**" access="isAuthenticated()" />
        <sec:intercept-url pattern="/**" access="permitAll" />
    </sec:http>

</beans>