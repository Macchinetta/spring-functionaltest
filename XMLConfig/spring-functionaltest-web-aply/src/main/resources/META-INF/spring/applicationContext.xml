<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd
    ">

    <import resource="classpath:/META-INF/spring/spring-functionaltest-web-aply-domain.xml" />

    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.DelegatingPasswordEncoder">
        <constructor-arg name="idForEncode" value="pbkdf2" />
        <constructor-arg name="idToPasswordEncoder">
            <map>
                <entry key="pbkdf2">
                    <bean class="org.springframework.security.crypto.password.Pbkdf2PasswordEncoder" factory-method="defaultsForSpringSecurity_v5_8" />
                </entry>
                <entry key="bcrypt">
                    <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
                </entry>
                <!-- When using commented out PasswordEncoders, you need to add bcprov-jdk18on.jar to the dependency.
                <entry key="argon2">
                    <bean class="org.springframework.security.crypto.argon2.Argon2PasswordEncoder" factory-method="defaultsForSpringSecurity_v5_8" />
                </entry>
                <entry key="scrypt">
                    <bean class="org.springframework.security.crypto.scrypt.SCryptPasswordEncoder" factory-method="defaultsForSpringSecurity_v5_8" />
                </entry>
                -->
            </map>
        </constructor-arg>
    </bean>

    <context:property-placeholder
        location="classpath*:/META-INF/spring/*.properties" />

    <!-- Message -->
    <bean id="messageSource"
        class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>i18n/application-messages</value>
                <value>i18n/application-messages-aply</value>
            </list>
        </property>
    </bean>

    <!-- Exception Code Resolver. -->
    <bean id="exceptionCodeResolver"
        class="org.terasoluna.gfw.common.exception.SimpleMappingExceptionCodeResolver">
        <!-- Setting and Customization by project. -->
        <property name="exceptionMappings">
            <map>
                <entry key="ResourceNotFoundException" value="e.sf.cmmn.5001" />
                <entry key="MultipartException" value="w.sf.cmmn.5002" />
                <entry key="BusinessException" value="e.sf.cmmn.8001" />
                <entry key="InvalidRequestException" value="e.sf.cmmn.8002" />
                <entry key="HttpSessionRequiredException" value="e.sf.cmmn.8002" />
                <entry key="IntentionalException" value="e.sf.cmmn.8003" />
                <entry key="HttpRequestMethodNotSupportedException"    value="e.sf.cmmn.6001" />
                <entry key="MediaTypeNotAcceptableException" value="e.sf.cmmn.6002" />
                <entry key="HttpMediaTypeNotSupportedException"    value="e.sf.cmmn.6003" />
                <entry key="MethodArgumentNotValidException" value="e.sf.cmmn.7002" />
                <entry key="JsonParseException" value="e.sf.cmmn.7003" />
                <entry key="UnrecognizedPropertyException" value="e.sf.cmmn.7004" />
                <entry key="JsonMappingException" value="e.sf.cmmn.7005" />
                <entry key="TypeMismatchException" value="e.sf.cmmn.7006" />
                <entry key="OptimisticLockingFailureException" value="e.sf.cmmn.8006" />
                <entry key="PessimisticLockingFailureException" value="e.sf.cmmn.8006" />
                <entry key="DataAccessException" value="e.sf.cmmn.9009" />
            </map>
        </property>
        <property name="defaultExceptionCode" value="e.sf.cmmn.9001" />
    </bean>

    <!-- Exception Logger. -->
    <bean id="exceptionLogger"
        class="org.terasoluna.gfw.common.exception.ExceptionLogger">
        <property name="exceptionCodeResolver" ref="exceptionCodeResolver" />
    </bean>

    <!-- Filter. -->
    <bean id="exceptionLoggingFilter"
        class="org.terasoluna.gfw.web.exception.ExceptionLoggingFilter" >
        <property name="exceptionLogger" ref="exceptionLogger" />
    </bean>

    <!-- Filter -->
    <bean id="loggingIpAddressAsBeanFilter" class="jp.co.ntt.fw.spring.functionaltest.app.aply.LoggingIpAddressFilter" />

    <aop:aspectj-autoproxy/>



</beans>
