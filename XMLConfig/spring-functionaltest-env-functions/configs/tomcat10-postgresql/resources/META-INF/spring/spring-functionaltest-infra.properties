# JDBC Driver settings
database=POSTGRESQL
dialect=jp.co.ntt.fw.spring.functionaltest.infra.hibernate.dialect.ExtendedPostgreSQLDialect

# connection pool
cp.maxActive=96
cp.maxIdle=16
cp.minIdle=0
cp.maxWait=60000

# connection setting
host.ip=localhost
host.http.port=8080
host.https.port=80

# File Upload setting
app.upload.temporaryDirectory=/tmp/spring-functionaltest-web/upload/temporaryDirectory/
app.upload.directory=/tmp/spring-functionaltest-web/upload/uploadDirectory/

# enabled column value
enabledValue=true

# Email settings (No-auth)
mail.noauth.smtp.host=localhost
mail.noauth.smtp.port=7025
mail.noauth.pop3.host=localhost
mail.noauth.pop3.port=7110
mail.noauth.smtp.port.invalid=7024

# Email settings (With-auth)
mail.auth.smtp.host=localhost
mail.auth.smtp.port=7025
mail.auth.smtp.user=info@auth-example.com
mail.auth.smtp.password=Ntt01
mail.auth.pop3.host=localhost
mail.auth.pop3.port=7110
mail.auth.smtp.password.invalid=password

# Email settings ('From' account)
mail.from.user=info
mail.from.password=Ntt01
mail.noauth.from.address=info@noauth-example.com
mail.auth.from.address=info@auth-example.com

# SOAP&RSCL connect settings
connect.host=localhost
connect.port=8080

# SOAP timeout settings
## WebService sleep time
soap.timeout.sleepMilliseconds=3000
## WebService Proxy timeout settings
soap.request.timeout.key=jakarta.xml.ws.client.receiveTimeout
soap.request.timeout.value=1000
soap.connect.timeout.key=jakarta.xml.ws.client.connectionTimeout
soap.connect.timeout.value=2000

# REST API Capacity (RestClient)
rscl.asyncRestTemplate.corePoolSize=3
rscl.asyncRestTemplate.queueCapacity=3
rscl.asyncRestTemplate.maxPoolSize=5

# JMS settings
jms.mq.host=localhost
jms.mq.port=61616
jms.mq.minLargeMessageSize=250000
jms.mq.priority=1
jms.mq.deliveryMode=2

# 0:NONE / 1:CONNECTION / 2:SESSION / 3:CONSUMER / 4:AUTO
jms.listener.chace.level=3

jmss.JndiDestinationResolver.resourceRef=true
app.jms.temporaryDirectory=/tmp/spring-functionaltest-web/jms/temporaryDirectory/
app.jms.receiveWaitTime=4000
app.jms.addReceiveWaitTime=1000
app.jms.receiveCheckInterval=200

jndi.prefix=java:comp/env/

# OAuth2 setting
oth2.server.protocol=http
oth2.server.host=localhost
oth2.server.port=8080
oth2.resource.server.artifactId=spring-functionaltest-web-oauth2-resource
oth2.resource.server.base-uri=${oth2.server.protocol}://${oth2.server.host}:${oth2.server.port}/${oth2.resource.server.artifactId}
oth2.resource.connection.timeout=10000
oth2.resource.read.timeout=10000

# OAuth2 Authorization Server
oth2.authorization.server.url=http://localhost:8900/realms/spring-functionaltest/protocol/openid-connect/auth
oth2.authorization.server.wrongurl=http://localhost:8900/realms/spring-functionaltest/protocol/openid-connect/wrong
oth2.authorization.token.url=http://localhost:8900/realms/spring-functionaltest/protocol/openid-connect/token
oth2.authorization.token.wrongurl=http://localhost:8900/realms/spring-functionaltest/protocol/openid-connect/wrong
oth2.jwk.set.uri=http://localhost:8900/realms/spring-functionaltest/protocol/openid-connect/certs
oth2.jwk.set.wronguri=http://localhost:8900/realms/spring-functionaltest/protocol/openid-connect/wrong
oth2.redirect.url={baseUrl}/auth/authorized
oth2.client.secret=secret

# Settings specific test cases to run for various environments
test.environment=nonMailServer
jms.test.environment=nonMqServer
test.environment.view=jsp

# base web
app.base.web.protocol=http
app.base.web.host=localhost
app.base.web.port=8080
app.base.web.name=spring-functionaltest-web
app.base.web.path=${app.base.web.protocol}://${app.base.web.host}:${app.base.web.port}/${app.base.web.name}
