<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:sec="http://www.springframework.org/schema/security" xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

  <sec:http pattern="/athn/0601/001/**" authentication-manager-ref="authEventHandleUserLoginManager">
    <sec:form-login login-page="/athn/0601/001/login" login-processing-url="/athn/0601/001/authenticate"
      default-target-url="/athn/0601/001?loginSuccess" always-use-default-target="true" />
    <sec:logout logout-url="/athn/0601/001/logout" logout-success-url="/athn/" />
    <sec:intercept-url pattern="/athn/0601/001/login/**" access="permitAll" />
    <sec:intercept-url pattern="/athn/0601/**" access="isAuthenticated()" />
  </sec:http>

  <sec:http pattern="/athn/0602/002/**" authentication-manager-ref="authEventHandleUserLoginManagerForServiceException">
    <sec:form-login login-page="/athn/0602/002/login" login-processing-url="/athn/0602/002/authenticate"
      default-target-url="/athn/0602/002?loginSuccess" always-use-default-target="true" />
    <sec:logout logout-url="/athn/0602/002/logout" logout-success-url="/athn/" />
    <sec:intercept-url pattern="/athn/0602/002/login/**" access="permitAll" />
    <sec:intercept-url pattern="/athn/0602/**" access="isAuthenticated()" />
  </sec:http>

  <sec:authentication-manager id="authEventHandleUserLoginManager">
    <sec:authentication-provider user-service-ref="authEventHandleUserDetailsService">
      <sec:password-encoder ref="passwordEncoder" />
    </sec:authentication-provider>
  </sec:authentication-manager>

  <sec:authentication-manager id="authEventHandleUserLoginManagerForServiceException">
    <sec:authentication-provider ref="shaAuthenticationProviderForServiceException"></sec:authentication-provider>
  </sec:authentication-manager>

  <bean id="pshsPasswordEncoderShaForServiceException" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
    <constructor-arg value="${password.sha.shaalgorithm}" />
    <property name="iterations" value="${password.sha.hashedstretching}" />
  </bean>

  <bean id="saltSourceForServiceException" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
    <property name="userPropertyToUse" value="${salt.propertytouse}" />
  </bean>

  <bean id="shaAuthenticationProviderForServiceException" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
    <property name="saltSource" ref="saltSourceForServiceException" />
    <property name="userDetailsService" ref="authEventHandleUserDetailsService" />
    <property name="passwordEncoder" ref="pshsPasswordEncoderShaForServiceException" />
  </bean>


</beans>
