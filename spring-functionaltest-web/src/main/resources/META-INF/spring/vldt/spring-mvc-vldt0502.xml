<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

  <context:property-placeholder location="classpath*:/META-INF/spring/*.properties" />

  <mvc:annotation-driven validator="validator" conversion-service="conversionService">
    <mvc:argument-resolvers>
      <ref bean="pageableHandlerMethodArgumentResolver" />
      <bean class="jp.co.ntt.fw.spring.functionaltest.app.aply.CommonParametersMethodArgumentResolver" />
      <bean class="jp.co.ntt.fw.spring.functionaltest.app.dmly.DeliveryOrderFormMethodArgumentResolver" />
      <bean
        class="jp.co.ntt.fw.spring.functionaltest.app.dmly.DeliveryOrderListFormMethodArgumentResolver" />
      <bean
        class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver" />
    </mvc:argument-resolvers>
    <mvc:message-converters>
      <ref bean="marshallingHttpMessageConverter" />
    </mvc:message-converters>
  </mvc:annotation-driven>

  <mvc:resources mapping="/resources/**" location="/resources/,classpath:META-INF/resources/"
    cache-period="#{60 * 60}" />

  <mvc:resources mapping="/uploadedTemporaryFiles/**" location="file://${app.upload.temporaryDirectory}"
    cache-period="#{60 * 60}" />

  <mvc:resources mapping="/uploadedFiles/**" location="file://${app.upload.directory}"
    cache-period="#{60 * 60}" />

  <mvc:interceptors>
    <mvc:interceptor>
      <mvc:mapping path="/**" />
      <mvc:exclude-mapping path="/resources/**" />
      <mvc:exclude-mapping path="/**/*.html" />
      <bean class="org.terasoluna.gfw.web.logging.TraceLoggingInterceptor" />
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**" />
      <mvc:exclude-mapping path="/resources/**" />
      <mvc:exclude-mapping path="/**/*.html" />
      <bean class="org.terasoluna.gfw.web.token.transaction.TransactionTokenInterceptor" />
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**" />
      <mvc:exclude-mapping path="/resources/**" />
      <mvc:exclude-mapping path="/**/*.html" />
      <bean class="org.terasoluna.gfw.web.codelist.CodeListInterceptor">
        <property name="codeListIdPattern" value="CL_.+" />
      </bean>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/aply/0402/**" />
      <mvc:exclude-mapping path="/resources/**" />
      <mvc:exclude-mapping path="/**/*.html" />
      <bean class="jp.co.ntt.fw.spring.functionaltest.app.aply.SuccessLoggingInterceptor" />
    </mvc:interceptor>

    <!-- OpenEntityManagerInViewInterceptor settings for Lazy Fetching of entity in Application Layer -->
    <mvc:interceptor>
      <mvc:mapping path="/djpa/book/interceptSrch/**" />
      <mvc:exclude-mapping path="/resources/**" />
      <mvc:exclude-mapping path="/**/*.html" />
      <bean class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor" />
    </mvc:interceptor>

  </mvc:interceptors>

  <!-- Settings View Resolver. -->
  <mvc:view-resolvers>
    <mvc:bean-name />
    <mvc:tiles />
    <mvc:jsp prefix="/WEB-INF/views/" />
  </mvc:view-resolvers>

  <mvc:tiles-configurer>
    <mvc:definitions location="/WEB-INF/tiles/tiles-definitions-tlly.xml" />
    <mvc:definitions location="/WEB-INF/tiles/tiles-definitions.xml" />
  </mvc:tiles-configurer>

  <bean id="requestDataValueProcessor" class="org.terasoluna.gfw.web.mvc.support.CompositeRequestDataValueProcessor">
    <constructor-arg>
      <util:list>
        <bean class="org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor" />
        <bean class="org.terasoluna.gfw.web.token.transaction.TransactionTokenRequestDataValueProcessor" />
      </util:list>
    </constructor-arg>
  </bean>

  <!-- Setting Exception Handling. -->
  <!-- Exception Resolver. -->
  <bean class="org.terasoluna.gfw.web.exception.SystemExceptionResolver">
    <property name="exceptionCodeResolver" ref="exceptionCodeResolver" />
    <!-- Setting and Customization by project. -->
    <property name="order" value="3" />

    <property name="excludedExceptions">
      <array>
        <value>org.springframework.security.access.AccessDeniedException
        </value>
      </array>
    </property>

    <property name="exceptionMappings">
      <map>
        <entry key="ResourceNotFoundException" value="common/error/resourceNotFoundError" />
        <entry key="BusinessException" value="common/error/businessError" />
        <entry key="InvalidTransactionTokenException" value="common/error/transactionTokenError" />
        <entry key=".DataAccessException" value="common/error/dataAccessError" />
        <entry key="InvalidRequestException" value="common/error/operationError" />
        <entry key="MultipartException" value="common/error/fileUploadError" />
        <entry key="HttpSessionRequiredException" value="common/error/operationError" />
        <entry key="MappingException" value="common/error/beanMappingError" />
        <entry key="IntentionalException" value="common/error/intentionalError" />
        <!-- <entry key="AccessDeniedException" value="common/error/accessDeniedError" /> -->
      </map>
    </property>

    <property name="statusCodes">
      <map>
        <entry key="common/error/resourceNotFoundError" value="404" />
        <entry key="common/error/businessError" value="409" />
        <entry key="common/error/transactionTokenError" value="409" />
        <entry key="common/error/dataAccessError" value="500" />
        <entry key="common/error/operationError" value="400" />
        <entry key="common/error/fileUploadError" value="400" />
        <entry key="common/error/beanMappingError" value="500" />
        <entry key="common/error/intentionalError" value="500" />
        <!-- <entry key="common/error/accessDeniedError" value="403" /> -->
      </map>
    </property>
    <property name="defaultErrorView" value="common/error/systemError" />
    <property name="defaultStatusCode" value="500" />
  </bean>
  <!-- Setting AOP. -->
  <bean id="handlerExceptionResolverLoggingInterceptor" class="org.terasoluna.gfw.web.exception.HandlerExceptionResolverLoggingInterceptor">
    <property name="exceptionLogger" ref="exceptionLogger" />
  </bean>
  <aop:config>
    <aop:advisor advice-ref="handlerExceptionResolverLoggingInterceptor"
      pointcut="execution(* org.springframework.web.servlet.HandlerExceptionResolver.resolveException(..))" />
  </aop:config>

  <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />

  <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor">
    <property name="validator" ref="validator" />
  </bean>

  <bean id="pageableHandlerMethodArgumentResolver" class="org.springframework.data.web.PageableHandlerMethodArgumentResolver" />

  <bean id="marshallingHttpMessageConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter" />

  <!-- additional -->
  <context:annotation-config />

  <bean class="jp.co.ntt.fw.spring.functionaltest.app.vldt.VLDT0502Controller" />

  <!-- formatter -->
  <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    <property name="formatters">
      <list>
        <bean class="jp.co.ntt.fw.spring.functionaltest.app.vldt.formatter.RoleFormatter" />
      </list>
    </property>
  </bean>

</beans>
