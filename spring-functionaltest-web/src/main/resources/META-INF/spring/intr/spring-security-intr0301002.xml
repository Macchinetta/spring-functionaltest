<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:sec="http://www.springframework.org/schema/security" xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

  <sec:http pattern="/intr/0301/002/**" auto-config="false" authentication-manager-ref="userLoginManager">
    <sec:form-login login-page="/intr/0301/001/login" login-processing-url="/intr/0301/001/authentication"
      default-target-url="/intr" />
    <sec:intercept-url pattern="/intr/0301/002/goToError" access="hasRole('STAFF')" />
    <sec:intercept-url pattern="/intr/0301/002/*" access="permitAll()" />
    <sec:access-denied-handler error-page="/intr/0301/error" />
    <sec:logout logout-url="/intr/0301/001/logout" logout-success-url="/intr" />
    <sec:session-management />
  </sec:http>

  <sec:authentication-manager id="userLoginManager">
    <sec:authentication-provider user-service-ref="intrUserDetailsService" />
  </sec:authentication-manager>

  <bean id="intrUserDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
    <property name="rolePrefix" value="ROLE_" />
    <property name="dataSource" ref="dataSource" />
    <property name="usersByUsernameQuery"
      value="SELECT username, password, enabled FROM t_vldt_account WHERE username = ? and enabled = ${enabledValue} " />
    <property name="authoritiesByUsernameQuery"
      value="SELECT username, authority FROM t_vldt_account WHERE username = ? and enabled = ${enabledValue} " />
  </bean>

</beans>
