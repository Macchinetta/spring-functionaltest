<!DOCTYPE logback>
<configuration>

    <property resource="META-INF/spring/application.properties" />
    <property resource="logback.properties" />

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern><![CDATA[date:%d{yyyy-MM-dd HH:mm:ss.SSS}\tthread:%thread\tX-Track:%X{X-Track}\tlevel:%-5level\tlogger:%-48logger{48}\tmessage:%replace(%msg){'(\r\n|\r|\n)','$1  '}%n%replace(%replace(%xEx){'(\r\n|\r|\n)','$1  '}){'  $',''}%nopex]]></pattern>
        </encoder>
    </appender>

    <appender name="APPLICATION_LOG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${app.log.dir:-log}/spring-functionaltest-${functions.name}-application.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${app.log.dir:-log}/backup/spring-functionaltest-${functions.name}-application-%d{yyyyMMdd}.log</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern><![CDATA[date:%d{yyyy-MM-dd HH:mm:ss}\tthread:%thread\tX-Track:%X{X-Track}\tlevel:%-5level\tlogger:%-48logger{48}\tmessage:%replace(%msg){'(\r\n|\r|\n)','$1  '}%n%replace(%replace(%xEx){'(\r\n|\r|\n)','$1  '}){'  $',''}%nopex]]></pattern>
        </encoder>
    </appender>

    <appender name="MONITORING_LOG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${app.log.dir:-log}/spring-functionaltest-${functions.name}-monitoring.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${app.log.dir:-log}/backup/spring-functionaltest-${functions.name}-monitoring-%d{yyyyMMdd}.log</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern><![CDATA[date:%d{yyyy-MM-dd HH:mm:ss}\tX-Track:%X{X-Track}\tlevel:%-5level\tmessage:%replace(%msg){'(\r\n|\r|\n)','$1  '}%n%replace(%replace(%xEx){'(\r\n|\r|\n)','$1  '}){'  $',''}%nopex]]></pattern>
        </encoder>
    </appender>

    <!-- Application Loggers -->
    <logger name="jp.co.ntt.fw.spring.functionaltest" level="debug" />
    <logger name="jp.co.ntt.fw.spring.functionaltest.domain.repository" level="trace" />
    <logger name="jp.co.ntt.fw.spring.functionaltest.app.lggn.LGGN_JSP_0401Controller" level="trace" />

    <!-- TERASOLUNA -->
    <logger name="org.terasoluna.gfw" level="info" />
    <logger name="org.terasoluna.gfw.web.logging.TraceLoggingInterceptor" level="trace" />
    <logger name="org.terasoluna.gfw.web.logging.HttpSessionEventLoggingListener" level="trace" />
    <logger name="org.terasoluna.gfw.common.exception.ExceptionLogger" level="info" />
    <logger name="org.terasoluna.gfw.common.exception.ExceptionLogger.Monitoring" additivity="false" level="error">
        <appender-ref ref="MONITORING_LOG_FILE" />
        <appender-ref ref="DB" />
    </logger>

    <!-- 3rdparty Loggers -->
    <logger name="org.springframework.core.LocalVariableTableParameterNameDiscoverer" level="error" />

    <logger name="org.springframework" level="warn" />

    <logger name="org.springframework.web.servlet" level="info" />

    <logger name="org.springframework.jdbc.core.JdbcTemplate" level="debug" />

    <logger name="org.hibernate.SQL" additivity="true" level="debug" />
    <logger name="org.hibernate.orm.jdbc.bind" level="trace" />

    <logger name="org.springframework.jdbc.datasource.DataSourceTransactionManager" level="${log.level.DataSourceTransactionManager}" />

    <logger name="org.springframework.orm.jpa.JpaTransactionManager" level="debug" />

    <logger name="java.sql.Connection" level="trace" />
    <logger name="java.sql.PreparedStatement" level="debug" />

    <logger name="org.thymeleaf.TemplateEngine" level="trace" />

    <root level="warn">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="APPLICATION_LOG_FILE" />
    </root>

</configuration>