<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>jp.co.ntt.fw.spring.functionaltest</groupId>
    <artifactId>spring-functionaltest</artifactId>
    <version>1.8.4.RELEASE</version>
    <packaging>pom</packaging>
    <modules>
        <module>spring-functionaltest-env</module>
        <module>spring-functionaltest-model</module>
        <module>spring-functionaltest-webservice</module>
        <module>spring-functionaltest-domain</module>
        <module>spring-functionaltest-web</module>
        <module>spring-functionaltest-env-oauth2</module>
        <module>spring-functionaltest-web-oauth2-client</module>
        <module>spring-functionaltest-web-oauth2-resource</module>
        <module>spring-functionaltest-web-thymeleaf</module>
        <module>spring-functionaltest-initdb</module>
        <module>spring-functionaltest-selenium</module>
    </modules>
    <parent>
        <groupId>org.terasoluna.gfw</groupId>
        <artifactId>terasoluna-gfw-parent</artifactId>
        <version>5.7.4.RELEASE</version>
        <relativePath />
    </parent>

    <name>Spring Functional Test - Multi Project</name>
    <description>Parent project for Spring Functional Test</description>
    <url>http://terasoluna.org</url>
    <inceptionYear>2014</inceptionYear>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>manual</distribution>
        </license>
    </licenses>
    <organization>
        <name>Macchinetta Framework Team</name>
        <url>https://macchinetta.github.io/</url>
    </organization>
    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>http://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>http://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <developers>
        <developer>
            <name>Macchinetta</name>
            <organization>Macchinetta</organization>
            <organizationUrl>http://macchinetta.github.io</organizationUrl>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:git://github.com/Macchinetta/spring-functionaltest.git</connection>
        <developerConnection>scm:git:ssh://github.com/Macchinetta/spring-functionaltest.git</developerConnection>
        <url>https://github.com/Macchinetta/spring-functionaltest</url>
    </scm>
    <build>
        <extensions>
            <extension>
                <groupId>org.apache.maven.archetype</groupId>
                <artifactId>archetype-packaging</artifactId>
                <version>${org.apache.maven.archetype.version}</version>
            </extension>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>${org.apache.maven.wagon.version}</version>
            </extension>
        </extensions>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${org.apache.maven.plugins.maven-failsafe-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${org.apache.maven.plugins.maven-surefire-plugin.version}</version>
                    <configuration>
                        <systemProperties>
                            <jdk.tls.client.protocols>TLSv1.2</jdk.tls.client.protocols>
                        </systemProperties>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${org.codehaus.mojo.build-helper-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>add-source</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>src/generated/java</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>add-resource</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>add-resource</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>src/generated/resources</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${org.apache.maven.plugins.maven-war-plugin.version}</version>
                    <configuration>
                        <webResources>
                            <resource>
                                <directory>${project.basedir}/../${project.env.target.name}/${project.env.main.directory}/webapp/WEB-INF</directory>
                                <targetPath>WEB-INF</targetPath>
                                <filtering>true</filtering>
                                <excludes>
                                    <exclude>**/.gitkeep</exclude>
                                </excludes>
                            </resource>
                        </webResources>
                        <warName>${project.artifactId}</warName>
                        <archive>
                            <addMavenDescriptor>false</addMavenDescriptor>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>cargo-maven3-plugin</artifactId>
                    <configuration>
                        <container>
                            <timeout>300000</timeout>
                            <dependencies>
                                <dependency>
                                    <groupId>org.postgresql</groupId>
                                    <artifactId>postgresql</artifactId>
                                </dependency>
                                <dependency>
                                    <groupId>com.sun.mail</groupId>
                                    <artifactId>jakarta.mail</artifactId>
                                </dependency>
                                <dependency>
                                    <groupId>com.sun.activation</groupId>
                                    <artifactId>jakarta.activation</artifactId>
                                </dependency>
                                <dependency>
                                    <groupId>jakarta.activation</groupId>
                                    <artifactId>jakarta.activation-api</artifactId>
                                </dependency>
                                <dependency>
                                    <groupId>jakarta.jms</groupId>
                                    <artifactId>jakarta.jms-api</artifactId>
                                </dependency>
                            </dependencies>
                        </container>
                        <deployables>
                            <deployable>
                                <location>${project.root.basedir}/${cargo.deployable.artifactId}/target/${cargo.deployable.warName}.war</location>
                                <type>war</type>
                                <properties>
                                    <context>${cargo.deployable.warName}</context>
                                </properties>
                            </deployable>
                        </deployables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>xml-maven-plugin</artifactId>
                    <version>${org.codehaus.mojo.xml-maven-plugin.version}</version>
                    <configuration>
                        <indentSize>2</indentSize>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.google.code.maven-replacer-plugin</groupId>
                    <artifactId>replacer</artifactId>
                    <version>${com.google.code.maven-replacer-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <configuration>
                        <source>${java-version}</source>
                        <additionalDependencies>
                            <additionalDependency>
                                <groupId>jakarta.interceptor</groupId>
                                <artifactId>jakarta.interceptor-api</artifactId>
                                <version>${jakarta.interceptor-api.version}</version>
                            </additionalDependency>
                        </additionalDependencies>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-functionaltest-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-functionaltest-domain</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-functionaltest-webservice</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-functionaltest-web</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-functionaltest-web-thymeleaf</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-functionaltest-env</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-functionaltest-env-oauth2</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- == Begin Database == -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.oracle.database.jdbc</groupId>
                <artifactId>ojdbc8</artifactId>
                <version>${ojdbc.version}</version>
            </dependency>
            <!-- == End Database == -->
        </dependencies>
    </dependencyManagement>
    <properties>
        <!-- == Maven Plugin Versions == -->
        <org.apache.maven.plugins.maven-war-plugin.version>3.3.1</org.apache.maven.plugins.maven-war-plugin.version>
        <org.codehaus.mojo.build-helper-maven-plugin.version>3.2.0</org.codehaus.mojo.build-helper-maven-plugin.version>
        <org.apache.maven.plugins.maven-failsafe-plugin.version>3.0.0-M5</org.apache.maven.plugins.maven-failsafe-plugin.version>
        <org.apache.maven.plugins.maven-surefire-plugin.version>3.0.0-M5</org.apache.maven.plugins.maven-surefire-plugin.version>
        <org.codehaus.mojo.xml-maven-plugin.version>1.0.2</org.codehaus.mojo.xml-maven-plugin.version>
        <com.google.code.maven-replacer-plugin.version>1.5.3</com.google.code.maven-replacer-plugin.version>
        <!-- == Dependency Versions == -->
        <org.apache.maven.archetype.version>2.2</org.apache.maven.archetype.version>
        <org.apache.maven.wagon.version>1.0-beta-7</org.apache.maven.wagon.version>
        <org.springframework.build.aws.version>3.0.0.RELEASE</org.springframework.build.aws.version>
        <postgresql.version>42.7.4</postgresql.version>
        <ojdbc.version>23.6.0.24.10</ojdbc.version>
        <!-- == Project Properties == -->
        <project.env.main.directory>src/main</project.env.main.directory>
        <project.env.target.name>spring-functionaltest-env</project.env.target.name>
        <project.env.buildFinalName>${project.artifactId}-${project.version}</project.env.buildFinalName>
        <project.root.basedir>${project.basedir}</project.root.basedir>
        <cargo.deployable.artifactId>spring-functionaltest-web</cargo.deployable.artifactId>
        <cargo.deployable.warName>spring-functionaltest-web</cargo.deployable.warName>
        <cargo.jvmargs>-Xms512m -Xmx1024m -Djdk.tls.client.protocols=TLSv1.2 -Djdk.tls.server.protocols=TLSv1.2</cargo.jvmargs>
        <ojdbc.name>ojdbc8</ojdbc.name>
        <encoding>UTF-8</encoding>
        <java-version>1.8</java-version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>jakarta.mail</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.sun.activation</groupId>
            <artifactId>jakarta.activation</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>jakarta.jms</groupId>
            <artifactId>jakarta.jms-api</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>include-context</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-war-plugin</artifactId>
                            <configuration>
                                <containerConfigXML>${project.basedir}/../${project.env.target.name}/configs/local/ContainerConfigXML/context.xml</containerConfigXML>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>tomcat9-postgresql</id>
            <properties>
                <project.env.main.directory>configs/tomcat9-postgresql</project.env.main.directory>
                <project.env.buildFinalName>${project.artifactId}-${project.version}-tomcat9-postgresql</project.env.buildFinalName>
            </properties>
        </profile>
        <profile>
            <id>tomcat9-oracle</id>
            <properties>
                <project.env.main.directory>configs/tomcat9-oracle</project.env.main.directory>
                <project.env.buildFinalName>${project.artifactId}-${project.version}-tomcat9-oracle</project.env.buildFinalName>
            </properties>
        </profile>
        <profile>
            <id>jdk11</id>
            <activation>
                <jdk>11</jdk>
            </activation>
            <properties>
                <java-version>11</java-version>
                <cargo.jvmargs>-Xms512m -Xmx1024m -Djava.locale.providers=COMPAT,CLDR,SPI -Djdk.tls.client.protocols=TLSv1.2 -Djdk.tls.server.protocols=TLSv1.2</cargo.jvmargs>
            </properties>
        </profile>
        <profile>
            <id>jdk17</id>
            <activation>
                <jdk>17</jdk>
            </activation>
            <properties>
                <java-version>17</java-version>
                <cargo.jvmargs>-Xms512m -Xmx1024m -Djava.locale.providers=COMPAT,CLDR,SPI -Djdk.tls.client.protocols=TLSv1.2 -Djdk.tls.server.protocols=TLSv1.2</cargo.jvmargs>
                <ojdbc.name>ojdbc17</ojdbc.name>
            </properties>
        </profile>
        <profile>
            <id>jdk21</id>
            <activation>
                <jdk>21</jdk>
            </activation>
            <properties>
                <java-version>21</java-version>
                <cargo.jvmargs>-Xms512m -Xmx1024m -Djava.locale.providers=COMPAT,CLDR,SPI -Djdk.tls.client.protocols=TLSv1.2 -Djdk.tls.server.protocols=TLSv1.2</cargo.jvmargs>
                <ojdbc.name>ojdbc17</ojdbc.name>
            </properties>
        </profile>
    </profiles>
</project>