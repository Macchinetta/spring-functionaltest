<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:oauth2="http://www.springframework.org/schema/security/oauth2" xmlns:sec="http://www.springframework.org/schema/security"
  xsi:schemaLocation="http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd
           http://www.springframework.org/schema/security/oauth2
           http://www.springframework.org/schema/security/spring-security-oauth2.xsd
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd">

  <sec:http pattern="${oth2.restServletPath}/oth2/resources/**" create-session="stateless"
    entry-point-ref="oauth2ResourceAuthenticationEntryPoint">
    <sec:expression-handler ref="oauth2ResourceExpressionHandler" />
    <sec:csrf disabled="true" />

    <sec:intercept-url pattern="/**" method="GET" access="#oauth2.hasScope('READ')" />
    <sec:intercept-url pattern="/**" method="PUT" access="#oauth2.hasScope('UPDATE')" />
    <sec:intercept-url pattern="/**" method="POST" access="#oauth2.hasScope('CREATE')" />
    <sec:intercept-url pattern="/**" method="DELETE" access="#oauth2.hasScope('DELETE')" />

    <sec:access-denied-handler ref="oauth2AccessDeniedHandler" />
    <sec:custom-filter ref="oauth2AuthenticationFilter" before="PRE_AUTH_FILTER" />
  </sec:http>

  <bean id="oauth2ResourceAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint" />

  <bean id="oauth2AccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />

  <oauth2:resource-server id="oauth2AuthenticationFilter" resource-id="todoResource"
    token-services-ref="oauth2ResourceTokenServices" entry-point-ref="oauth2ResourceAuthenticationEntryPoint" />

  <oauth2:web-expression-handler id="oauth2ResourceExpressionHandler" />

  <bean id="oauth2ResourceTokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
    <property name="tokenStore" ref="oauth2ResourceTokenStore" />
  </bean>

  <bean id="oauth2ResourceTokenStore" class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore">
    <constructor-arg ref="dataSource" />
  </bean>

</beans>