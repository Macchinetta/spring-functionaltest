<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.ntt.fw.spring.functionaltest.domain.repository.pgnt.CelebrityRepository">

  <resultMap id="celebrityResultMap" type="Celebrity">
    <result property="celebrityId" column="celebrity_id" />
    <result property="firstName" column="first_name" />
    <result property="lastName" column="last_name" />
  </resultMap>

  <sql id="selectCelebrity">
    SELECT
    celebrity_id
    ,first_name
    ,last_name
    FROM
    t_celebrity
  </sql>

  <sql id="selectCelebrityOracle">
    SELECT
    celebrity_id
    ,first_name
    ,last_name
    ,ROW_NUMBER() OVER(
    <choose>
      <when test="pageable.sort.iterator().hasNext()">
        ORDER BY
        <foreach item="order" collection="pageable.sort" separator=",">
          ${order.property}
          ${order.direction}
        </foreach>
      </when>
      <otherwise>
        ORDER BY celebrity_id ASC
      </otherwise>
    </choose>
    ) AS line
    FROM
    t_celebrity
  </sql>

  <sql id="celebritySearchCriteria">
    <trim prefix="WHERE" prefixOverrides="AND |OR ">
      <if test="celebritySearchCriteria.firstName != null and celebritySearchCriteria.firstName != ''">
        first_name = #{celebritySearchCriteria.firstName}
      </if>
      <if test="celebritySearchCriteria.lastName != null and celebritySearchCriteria.lastName != ''">
        AND last_name = #{celebritySearchCriteria.lastName}
      </if>
    </trim>
  </sql>

  <select id="findPage"
    parameterType="jp.co.ntt.fw.spring.functionaltest.domain.repository.pgnt.PageableCelebritySearchCriteria"
    resultMap="celebrityResultMap">
    <include refid="selectCelebrity" />
    <include refid="celebritySearchCriteria" />
    <if test="pageable.sort.iterator().hasNext()">
      ORDER BY
      <foreach item="order" collection="pageable.sort" separator=",">
        ${order.property}
        ${order.direction}
      </foreach>
    </if>
    LIMIT #{pageable.pageSize}
    OFFSET #{pageable.offset}
  </select>

  <select id="findPage"
    parameterType="jp.co.ntt.fw.spring.functionaltest.domain.repository.pgnt.PageableCelebritySearchCriteria"
    resultMap="celebrityResultMap" databaseId="oracle">
    SELECT * FROM (
    <include refid="selectCelebrityOracle" />
    <include refid="celebritySearchCriteria" />
    <if test="pageable.sort.iterator().hasNext()">
      ORDER BY
      <foreach item="order" collection="pageable.sort" separator=",">
        ${order.property}
        ${order.direction}
      </foreach>
    </if>
    )
    WHERE
    line
    BETWEEN #{pageable.offset}+1
    AND #{pageable.offset}+#{pageable.pageSize}
  </select>

  <select id="countByCriteria"
    parameterType="jp.co.ntt.fw.spring.functionaltest.domain.repository.pgnt.PageableCelebritySearchCriteria"
    resultType="long">
    SELECT
    count(*)
    FROM
    t_celebrity
    <include refid="celebritySearchCriteria" />
  </select>

</mapper>
