<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.ntt.fw.spring.functionaltest.domain.repository.excn.StockRepository">

  <resultMap id="stockResultMap" type="jp.co.ntt.fw.spring.functionaltest.domain.model.Stock">
    <result property="itemCode" column="item_code" />
    <result property="itemName" column="item_name" />
    <result property="quantity" column="quantity" />
    <result property="version" column="version" />
  </resultMap>

  <select id="selectByItemCode" parameterType="String" resultMap="stockResultMap">
    <bind name="itemCode" value="_parameter" />
    SELECT
    item_code,
    item_name,
    quantity,
    version
    FROM
    stock
    WHERE
    item_code = #{itemCode}
  </select>

  <select id="selectByItemCodeWithPessimisticLock" parameterType="String" resultMap="stockResultMap">
    <bind name="itemCode" value="_parameter" />
    SELECT
    item_code,
    item_name,
    quantity,
    version
    FROM
    stock
    WHERE
    item_code = #{itemCode}
    FOR UPDATE NOWAIT
  </select>

  <select id="selectByItemCodeWithPessimisticLock" parameterType="String" resultMap="stockResultMap"
    databaseId="db2">
    <bind name="itemCode" value="_parameter" />
    SELECT
    item_code,
    item_name,
    quantity,
    version
    FROM
    stock
    WHERE
    item_code = #{itemCode}
    FOR UPDATE WITH
    RS
  </select>

  <update id="updateQuantity" parameterType="jp.co.ntt.fw.spring.functionaltest.domain.model.Stock">
    UPDATE stock
    SET
    quantity = #{quantity}
    WHERE
    item_code = #{itemCode}
  </update>

  <update id="updateQuantityWithRDBMSLock" parameterType="jp.co.ntt.fw.spring.functionaltest.domain.model.Stock">
    UPDATE stock
    SET
    quantity = quantity - #{quantity}
    WHERE
    item_code = #{itemCode}
    AND quantity <![CDATA[ >= ]]>
    #{quantity}
  </update>

  <update id="updateQuantityWithOptimisticLock" parameterType="jp.co.ntt.fw.spring.functionaltest.domain.model.Stock">
    UPDATE stock
    SET
    quantity =
    #{quantity},
    version = version + 1
    WHERE
    item_code = #{itemCode}
    AND version = #{version}
  </update>

  <update id="setCurrentLockTimeoutNotWait" databaseId="db2">
    SET CURRENT LOCK TIMEOUT NOT WAIT
  </update>

  <update id="setCurrentLockTimeoutDefault" databaseId="db2">
    SET CURRENT LOCK TIMEOUT NULL
  </update>

</mapper>
