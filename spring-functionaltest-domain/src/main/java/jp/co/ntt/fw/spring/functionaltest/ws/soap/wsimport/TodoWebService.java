/*
 * Copyright 2014-2017 NTT Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport;

import java.util.List;
import javax.activation.DataHandler;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.9-b130926.1035 Generated source version: 2.2
 */
@WebService(name = "TodoWebService", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo")
@XmlSeeAlso({ ObjectFactory.class })
public interface TodoWebService {

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "deleteTodos", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.DeleteTodos")
    @ResponseWrapper(localName = "deleteTodosResponse", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.DeleteTodosResponse")
    public void deleteTodos();

    /**
     * @param arg0
     * @return returns boolean
     * @throws WebFaultException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "uploadFile", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.UploadFile")
    @ResponseWrapper(localName = "uploadFileResponse", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.UploadFileResponse")
    public boolean uploadFile(
            @WebParam(name = "arg0", targetNamespace = "") DataHandler arg0) throws WebFaultException;

    /**
     * @return returns java.util.List<jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.Todo>
     */
    @WebMethod
    @WebResult(name = "todos", targetNamespace = "")
    @RequestWrapper(localName = "getTodos", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.GetTodos")
    @ResponseWrapper(localName = "getTodosResponse", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.GetTodosResponse")
    public List<Todo> getTodos();

    /**
     * @param todo
     * @throws WebFaultException
     */
    @WebMethod
    @RequestWrapper(localName = "updateTodo", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.UpdateTodo")
    @ResponseWrapper(localName = "updateTodoResponse", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.UpdateTodoResponse")
    public void updateTodo(
            @WebParam(name = "todo", targetNamespace = "", mode = WebParam.Mode.INOUT) Holder<Todo> todo) throws WebFaultException;

    /**
     * @param todoId
     * @throws WebFaultException
     */
    @WebMethod
    @RequestWrapper(localName = "deleteTodo", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.DeleteTodo")
    @ResponseWrapper(localName = "deleteTodoResponse", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.DeleteTodoResponse")
    public void deleteTodo(
            @WebParam(name = "todoId", targetNamespace = "") String todoId) throws WebFaultException;

    /**
     * @throws WebFaultException
     */
    @WebMethod
    @RequestWrapper(localName = "timeoutTest", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.TimeoutTest")
    @ResponseWrapper(localName = "timeoutTestResponse", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.TimeoutTestResponse")
    public void timeoutTest() throws WebFaultException;

    /**
     * @param todo
     * @throws WebFaultException
     */
    @WebMethod
    @RequestWrapper(localName = "createTodo", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.CreateTodo")
    @ResponseWrapper(localName = "createTodoResponse", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.CreateTodoResponse")
    public void createTodo(
            @WebParam(name = "todo", targetNamespace = "", mode = WebParam.Mode.INOUT) Holder<Todo> todo) throws WebFaultException;

    /**
     * @param todoId
     * @return returns jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.Todo
     * @throws WebFaultException
     */
    @WebMethod
    @WebResult(name = "todo", targetNamespace = "")
    @RequestWrapper(localName = "getTodo", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.GetTodo")
    @ResponseWrapper(localName = "getTodoResponse", targetNamespace = "http://functionaltest.spring.fw.ntt.co.jp/todo", className = "jp.co.ntt.fw.spring.functionaltest.ws.soap.wsimport.GetTodoResponse")
    public Todo getTodo(
            @WebParam(name = "todoId", targetNamespace = "") String todoId) throws WebFaultException;

}
