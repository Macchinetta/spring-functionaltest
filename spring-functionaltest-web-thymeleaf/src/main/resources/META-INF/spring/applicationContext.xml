<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:jms="http://www.springframework.org/schema/jms"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">

  <import resource="classpath:/META-INF/spring/spring-functionaltest-domain.xml" />

  <bean id="passwordEncoder" class="org.springframework.security.crypto.password.DelegatingPasswordEncoder">
    <constructor-arg name="idForEncode" value="pbkdf2" />
    <constructor-arg name="idToPasswordEncoder">
      <map>
        <entry key="pbkdf2">
          <bean class="org.springframework.security.crypto.password.Pbkdf2PasswordEncoder" />
        </entry>
        <entry key="bcrypt">
          <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
        </entry>
        <entry key="scrypt">
          <bean class="org.springframework.security.crypto.scrypt.SCryptPasswordEncoder" />
        </entry>
      </map>
    </constructor-arg>
  </bean>

  <context:property-placeholder location="classpath*:/META-INF/spring/*.properties" />

  <bean class="com.github.dozermapper.spring.DozerBeanMapperFactoryBean">
    <property name="mappingFiles" value="classpath*:/META-INF/dozer/**/*-mapping.xml" />
  </bean>

  <!-- Message -->
  <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basenames">
      <list>
        <value>i18n/application-messages</value>
        <value>i18n/application-messages-aply</value>
        <value>i18n/application-messages-aplythymeleaf</value>
        <value>i18n/application-messages-thly</value>
        <value>i18n/application-messages-dtop</value>
        <value>i18n/application-messages-flup</value>
        <value>i18n/application-messages-intr0101004</value>
        <value>i18n/application-messages-ssmn</value>
        <value>i18n/application-messages-cspr</value>
        <value>i18n/application-messages-excn</value>
        <value>i18n/application-messages-exhn</value>
        <value>i18n/application-messages-bnmp</value>
        <value>i18n/application-messages-ajax</value>
        <value>i18n/application-messages-vldt</value>
        <value>i18n/application-messages-athn</value>
        <value>i18n/application-messages-dam3</value>
        <value>i18n/application-messages-rest</value>
        <value>i18n/application-messages_rscl</value>
        <value>i18n/application-messages-soap</value>
        <value>i18n/application-messages-oth2</value>
      </list>
    </property>
  </bean>

  <!-- Exception Code Resolver. -->
  <bean id="exceptionCodeResolver" class="org.terasoluna.gfw.common.exception.SimpleMappingExceptionCodeResolver">
    <!-- Setting and Customization by project. -->
    <property name="exceptionMappings">
      <map>
        <entry key="ResourceNotFoundException" value="e.sf.cmmn.5001" />
        <entry key="MultipartException" value="w.sf.cmmn.5002" />
        <entry key="BusinessException" value="e.sf.cmmn.8001" />
        <entry key="InvalidRequestException" value="e.sf.cmmn.8002" />
        <entry key="HttpSessionRequiredException" value="e.sf.cmmn.8002" />
        <entry key="IntentionalException" value="e.sf.cmmn.8003" />
        <entry key="HttpRequestMethodNotSupportedException" value="e.sf.cmmn.6001" />
        <entry key="MediaTypeNotAcceptableException" value="e.sf.cmmn.6002" />
        <entry key="HttpMediaTypeNotSupportedException" value="e.sf.cmmn.6003" />
        <entry key="MethodArgumentNotValidException" value="e.sf.cmmn.7007" />
        <entry key="BindException" value="e.sf.cmmn.7002" />
        <entry key="JsonParseException" value="e.sf.cmmn.7003" />
        <entry key="UnrecognizedPropertyException" value="e.sf.cmmn.7004" />
        <entry key="JsonMappingException" value="e.sf.cmmn.7005" />
        <entry key="TypeMismatchException" value="e.sf.cmmn.7006" />
        <entry key="OptimisticLockingFailureException" value="e.sf.cmmn.8006" />
        <entry key="PessimisticLockingFailureException" value="e.sf.cmmn.8006" />
        <entry key="DataAccessException" value="e.sf.cmmn.9009" />
        <entry key="MappingException" value="e.sf.bnmp.0001" />
      </map>
    </property>
    <property name="defaultExceptionCode" value="e.sf.cmmn.9001" />
  </bean>

  <!-- Exception Logger. -->
  <bean id="exceptionLogger" class="org.terasoluna.gfw.common.exception.ExceptionLogger">
    <property name="exceptionCodeResolver" ref="exceptionCodeResolver" />
  </bean>

  <!-- Filter. -->
  <bean id="exceptionLoggingFilter" class="org.terasoluna.gfw.web.exception.ExceptionLoggingFilter">
    <property name="exceptionLogger" ref="exceptionLogger" />
  </bean>
  
  <bean class="org.springframework.web.context.support.ServletContextAttributeExporter">
    <property name="attributes">
      <map>
        <entry key="foo" value="aaa" />
      </map>
    </property>
  </bean>

  <context:component-scan base-package="jp.co.ntt.fw.spring.functionaltest.config" />

  <!-- JMS Setting -->
  <jms:annotation-driven />
  <context:component-scan base-package="jp.co.ntt.fw.spring.functionaltest.listener" />

</beans>
