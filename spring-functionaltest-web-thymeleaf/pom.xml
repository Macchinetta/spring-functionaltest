<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>spring-functionaltest-web-thymeleaf</artifactId>
  <packaging>war</packaging>
  <parent>
    <groupId>jp.co.ntt.fw.spring.functionaltest</groupId>
    <artifactId>spring-functionaltest</artifactId>
    <version>1.9.0.RELEASE</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <name>Spring Functional Test - Web Layer For Thymeleaf</name>
  <description>Web layer of Spring Functional Test For Thymeleaf</description>

  <build>
    <resources>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <warName>spring-functionaltest-web</warName>
          <webResources>
            <webResource>
              <directory>${project.root.basedir}/spring-functionaltest-web/src/main/webapp/resources</directory>
              <targetPath>resources</targetPath>
              <exclude>**/ajax.js</exclude>
            </webResource>
            <webResource>
              <directory>${project.root.basedir}/spring-functionaltest-web/src/main/webapp/WEB-INF/views</directory>
              <targetPath>WEB-INF/views</targetPath>
              <exclude>**/*.jsp</exclude>
            </webResource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.root.basedir}/spring-functionaltest-web/src/main/java</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.root.basedir}/spring-functionaltest-web/src/main/resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>local</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>spring-functionaltest-env</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>warpack</id>
      <dependencies>
      </dependencies>
    </profile>
    <profile>
      <id>warpack-env</id>
      <dependencies>
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>spring-functionaltest-env</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <!-- Add profile for packaging jakarta Transaction jars -->
    <profile>
      <id>warpack-transaction</id>
      <dependencies>
        <dependency>
          <groupId>jakarta.transaction</groupId>
          <artifactId>jakarta.transaction-api</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <!-- Add profile for JAXB jars -->
    <profile>
      <id>warpack-jaxb</id>
      <dependencies>
        <dependency>
          <groupId>org.glassfish.jaxb</groupId>
          <artifactId>jaxb-runtime</artifactId>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>spring-functionaltest-domain</artifactId>
      <exclusions>
        <exclusion>
          <groupId>joda-time</groupId>
          <artifactId>joda-time-jsptags</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>spring-functionaltest-env</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.angus</groupId>
      <artifactId>jakarta.mail</artifactId>
    </dependency>
    <dependency>
    <groupId>jakarta.transaction</groupId>
      <artifactId>jakarta.transaction-api</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.jms</groupId>
      <artifactId>jakarta.jms-api</artifactId>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>spring-functionaltest-webservice</artifactId>
    </dependency>

    <!-- == Begin TERASOLUNA == -->
    <dependency>
      <groupId>org.terasoluna.gfw</groupId>
      <artifactId>terasoluna-gfw-web-dependencies</artifactId>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.terasoluna.gfw</groupId>
      <artifactId>terasoluna-gfw-security-web-dependencies</artifactId>
      <type>pom</type>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-taglibs</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.terasoluna.gfw</groupId>
      <artifactId>terasoluna-gfw-validator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.terasoluna.gfw</groupId>
      <artifactId>terasoluna-gfw-recommended-web-dependencies</artifactId>
      <type>pom</type>
    </dependency>
    <!-- == End TERASOLUNA == -->

    <!-- == Begin Thymeleaf == -->
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf-spring6</artifactId>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf.extras</groupId>
      <artifactId>thymeleaf-extras-springsecurity6</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- == End Thymeleaf == -->

    <!-- == Begin XXE Injection Countermeasure == -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
    </dependency>
    <!-- == End XXE Injection Countermeasure == -->

    <!-- == Begin Password Encode == -->
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk18on</artifactId>
    </dependency>
    <!-- == End Password Encode == -->

    <!-- == Begin Mail == -->
    <dependency>
      <groupId>com.icegreen</groupId>
      <artifactId>greenmail-spring</artifactId>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>com.sun.mail</groupId>
          <artifactId>jakarta.mail</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.eclipse.angus</groupId>
      <artifactId>jakarta.mail</artifactId>
    </dependency>
    <!-- == End Mail == -->

    <!-- == Begin Jakarta Activation == -->
    <dependency>
      <groupId>jakarta.activation</groupId>
      <artifactId>jakarta.activation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.angus</groupId>
      <artifactId>angus-activation</artifactId>
      <scope>runtime</scope>
    </dependency>
    <!-- == End Jakarta Activation == -->

    <!-- == Begin Jetty Proxy Server == -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-proxy</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-deploy</artifactId>
    </dependency>
    <!-- == End Jetty Proxy Server == -->

    <!-- == Begin For Report == -->
    <dependency>
      <groupId>com.github.librepdf</groupId>
      <artifactId>openpdf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <exclusions>
        <exclusion>
          <groupId>stax</groupId>
          <artifactId>stax-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- == End For Report == -->

    <!-- == Begin Log4j 2 to SLF4J Adapter == -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-to-slf4j</artifactId>
    </dependency>
    <!-- == End Log4j 2 to SLF4J Adapter == -->

    <!-- == Begin Unit Test == -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- == End Unit Test == -->

  </dependencies>
  <properties>
    <project.root.basedir>${project.parent.basedir}</project.root.basedir>
    <cargo.deployable.artifactId>${project.artifactId}</cargo.deployable.artifactId>
    <cargo.deployable.warName>spring-functionaltest-web</cargo.deployable.warName>
  </properties>
</project>
